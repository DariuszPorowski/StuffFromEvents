{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the logic app to create."
      }
    },
    "testUri": {
      "type": "string",
      "defaultValue": "http://azure.microsoft.com/en-us/status/feed/",
      "metadata": {
        "description": "A test URI"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "diagnosticsApiVersion": {
      "type": "string"
    },
    "omsWorkspaceId": {
      "type": "string"
    },
    "retentionPolicyEnabled": {
      "type": "bool",
      "defaultValue": false
    },
    "logsEnabled": {
      "type": "bool",
      "defaultValue": true
    },
    "retentionDays": {
      "type": "int",
      "defaultValue": 0
    },
    "omsWorkspaceName": {
      "type": "string"
    },
    "omsWorkspaceResourceGroupName": {
      "type": "string",
      "defaultValue": "[split(parameters('omsWorkspaceId'),'/')[4]]"
    },
    "omsSolutionApiVersion": {
      "type": "string"
    },
    "omsSolutionLocation": {
      "type": "string"
    },
    "omsSolutionName": {
      "type": "string"
    },
    "resourceDeploymentApiVersion": {
      "type": "string",
      "defaultValue": "2017-05-10"
    },
    "office365_1_Connection_Name": {
      "type": "string",
      "defaultValue": "office365"
    },
    "office365_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "<email>"
    },
    "conversionservice_1_Connection_Name": {
      "type": "string",
      "defaultValue": "conversionservice"
    },
    "conversionservice_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Content Conversion"
    },
    "cognitiveservicescontentmoderator_1_Connection_Name": {
      "type": "string",
      "defaultValue": "cognitiveservicescontentmoderator"
    },
    "cognitiveservicescontentmoderator_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "ContentModerator"
    },
    "cognitiveservicescontentmoderator_1_api_key": {
      "type": "securestring",
      "metadata": {
        "description": "The API Key for this api"
      }
    },
    "cognitiveservicescontentmoderator_1_siteUrl": {
      "type": "string",
      "metadata": {
        "description": "Root site url (Example: https://westus.api.cognitive.microsoft.com ).If not specified site url will be defaulted to 'https://westus.api.cognitive.microsoft.com'."
      },
      "defaultValue": "https://northeurope.api.cognitive.microsoft.com"
    },
    "cognitiveservicestextanalytics_1_Connection_Name": {
      "type": "string",
      "defaultValue": "cognitiveservicestextanalytics"
    },
    "cognitiveservicestextanalytics_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "Cognitive Services\nTextAnalytics"
    },
    "cognitiveservicestextanalytics_1_apiKey": {
      "type": "securestring",
      "metadata": {
        "description": "Cognitive Services Account Key"
      }
    },
    "cognitiveservicestextanalytics_1_siteUrl": {
      "type": "string",
      "metadata": {
        "description": "Root site url (Example: https://westus.api.cognitive.microsoft.com ).If not specified site url will be defaulted to 'https://westus.api.cognitive.microsoft.com'."
      },
      "defaultValue": "https://northeurope.api.cognitive.microsoft.com"
    },
    "teams_1_Connection_Name": {
      "type": "string",
      "defaultValue": "teams"
    },
    "teams_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "<email>"
    }
  },
  "variables": {
    "omsWorkspaceResourceId": "[resourceId(subscription().subscriptionId, parameters('omsWorkspaceResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('omsWorkspaceName'))]",
    "diagnosticName": "[concat('microsoft.insights/', parameters('logicAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "properties": {
        "definition": {
          "$schema": "http://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Html_to_text": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['conversionservice']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@triggerBody()?['Body']",
                "path": "/html2text"
              },
              "runAfter": {}
            },
            "Detect_Sentiment": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['cognitiveservicestextanalytics']['connectionId']"
                  }
                },
                "method": "post",
                "body": {
                  "text": "@body('Html_to_text')"
                },
                "path": "/sentiment"
              },
              "runAfter": {
                "Html_to_text": [
                  "Succeeded"
                ]
              }
            },
            "Detect_profanity_and_match_against_custom_and_shared_blacklists": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['cognitiveservicescontentmoderator']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@body('Html_to_text')",
                "headers": {
                  "Content-Type": "text/plain"
                },
                "path": "/contentmoderator/moderate/v1.0/ProcessText/Screen/",
                "queries": {
                  "autocorrect": false,
                  "PII": true,
                  "classify": true
                }
              },
              "runAfter": {
                "Html_to_text": [
                  "Succeeded"
                ]
              }
            },
            "Condition": {
              "type": "If",
              "expression": {
                "or": [
                  {
                    "lessOrEquals": [
                      "@body('Detect_Sentiment')?['score']",
                      0.5
                    ]
                  },
                  {
                    "equals": [
                      "@body('Detect_profanity_and_match_against_custom_and_shared_blacklists')?['Classification']?['ReviewRecommended']",
                      true
                    ]
                  }
                ]
              },
              "actions": {
                "Condition_2": {
                  "type": "If",
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@body('Detect_profanity_and_match_against_custom_and_shared_blacklists')?['Classification']?['ReviewRecommended']",
                          true
                        ]
                      }
                    ]
                  },
                  "actions": {
                    "Post_message": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['teams']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "rootMessage": {
                            "body": {
                              "content": "BAD classification was found in the email received at  @{triggerBody()?['DateTimeReceived']} from @{triggerBody()?['From']} with: - Classification cat. 1 score: @{body('Detect_profanity_and_match_against_custom_and_shared_blacklists')?['Classification']?['Category1']?['score']} - Classification cat. 2 score:  @{body('Detect_profanity_and_match_against_custom_and_shared_blacklists')?['Classification']?['Category2']?['score']} - Classification cat. 3 score:  @{body('Detect_profanity_and_match_against_custom_and_shared_blacklists')?['Classification']?['Category3']?['score']} - Sentiment score: @{body('Detect_Sentiment')?['score']}",
                              "contentType": 1
                            }
                          }
                        },
                        "path": "/beta/groups/@{encodeURIComponent('2ebfc479-f436-4d31-9c76-27fec5fa7557')}/channels/@{encodeURIComponent('16a4a488-cdb1-4fed-ad67-e2fc8947ab52')}/chatThreads"
                      },
                      "runAfter": {}
                    }
                  },
                  "runAfter": {},
                  "else": {
                    "actions": {
                      "Post_message_2": {
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['teams']['connectionId']"
                            }
                          },
                          "method": "post",
                          "body": {
                            "rootMessage": {
                              "body": {
                                "content": "BAD text sentiment was found in the email received at @{triggerBody()?['DateTimeReceived']} from@{triggerBody()?['From']}  with the score:@{body('Detect_Sentiment')?['score']} ",
                                "contentType": 1
                              }
                            }
                          },
                          "path": "/beta/groups/@{encodeURIComponent('2ebfc479-f436-4d31-9c76-27fec5fa7557')}/channels/@{encodeURIComponent('16a4a488-cdb1-4fed-ad67-e2fc8947ab52')}/chatThreads"
                        },
                        "runAfter": {}
                      }
                    }
                  }
                },
                "Flag_email_2": {
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['office365']['connectionId']"
                      }
                    },
                    "method": "post",
                    "path": "/Mail/Flag/@{encodeURIComponent(triggerBody()?['Id'])}"
                  },
                  "runAfter": {
                    "Condition_2": [
                      "Succeeded"
                    ]
                  }
                }
              },
              "runAfter": {
                "Detect_Sentiment": [
                  "Succeeded"
                ],
                "Detect_profanity_and_match_against_custom_and_shared_blacklists": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Post_message_3": {
                    "type": "ApiConnection",
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['teams']['connectionId']"
                        }
                      },
                      "method": "post",
                      "body": {
                        "rootMessage": {
                          "body": {
                            "content": "All GOOD in the email recieved at @{triggerBody()?['DateTimeReceived']} from@{triggerBody()?['From']} with: - Classification cat. 1 score: @{body('Detect_profanity_and_match_against_custom_and_shared_blacklists')?['Classification']?['Category1']?['score']}  - Classification cat. 2 score: @{body('Detect_profanity_and_match_against_custom_and_shared_blacklists')?['Classification']?['Category2']?['score']}  - Classification cat. 3 score: @{body('Detect_profanity_and_match_against_custom_and_shared_blacklists')?['Classification']?['Category3']?['score']} - Sentiment score: @{body('Detect_Sentiment')?['score']} ",
                            "contentType": 1
                          }
                        }
                      },
                      "path": "/beta/groups/@{encodeURIComponent('2ebfc479-f436-4d31-9c76-27fec5fa7557')}/channels/@{encodeURIComponent('16a4a488-cdb1-4fed-ad67-e2fc8947ab52')}/chatThreads"
                    },
                    "runAfter": {}
                  },
                  "Mark_as_read": {
                    "type": "ApiConnection",
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['office365']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/Mail/MarkAsRead/@{encodeURIComponent(triggerBody()?['Id'])}"
                    },
                    "runAfter": {
                      "Post_message_3": [
                        "Succeeded"
                      ]
                    }
                  },
                  "Move_email": {
                    "type": "ApiConnection",
                    "inputs": {
                      "host": {
                        "connection": {
                          "name": "@parameters('$connections')['office365']['connectionId']"
                        }
                      },
                      "method": "post",
                      "path": "/Mail/Move/@{encodeURIComponent(triggerBody()?['Id'])}",
                      "queries": {
                        "folderPath": "Id::AAMkADJhMDEzZGFhLWZjZGQtNGQ1OC05ZjE1LWRiZmRmZDc2YTdjZAAuAAAAAADEpSR6jZDmS5z2HNnfMs5lAQDvj5pEYee4Q78s3ym82EeNAAEB_JNIAAA="
                      }
                    },
                    "runAfter": {
                      "Mark_as_read": [
                        "Succeeded"
                      ]
                    },
                    "metadata": {
                      "Id::AAMkADJhMDEzZGFhLWZjZGQtNGQ1OC05ZjE1LWRiZmRmZDc2YTdjZAAuAAAAAADEpSR6jZDmS5z2HNnfMs5lAQDvj5pEYee4Q78s3ym82EeNAAEB_JNIAAA=": "Serverless"
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            },
            "testURI": {
              "type": "string",
              "defaultValue": "[parameters('testUri')]"
            }
          },
          "triggers": {
            "When_a_new_email_arrives": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Mail/OnNewEmail",
                "queries": {
                  "folderPath": "Inbox",
                  "importance": "Any",
                  "fetchOnlyWithAttachment": false,
                  "includeAttachments": false,
                  "subjectFilter": "ServerlessDEMO"
                }
              },
              "recurrence": {
                "frequency": "Minute",
                "interval": 1
              },
              "splitOn": "@triggerBody()?['value']"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "conversionservice": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'conversionservice')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('conversionservice_1_Connection_Name'))]",
                "connectionName": "[parameters('conversionservice_1_Connection_Name')]"
              },
              "cognitiveservicestextanalytics": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'cognitiveservicestextanalytics')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('cognitiveservicestextanalytics_1_Connection_Name'))]",
                "connectionName": "[parameters('cognitiveservicestextanalytics_1_Connection_Name')]"
              },
              "cognitiveservicescontentmoderator": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'cognitiveservicescontentmoderator')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('cognitiveservicescontentmoderator_1_Connection_Name'))]",
                "connectionName": "[parameters('cognitiveservicescontentmoderator_1_Connection_Name')]"
              },
              "teams": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'teams')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('teams_1_Connection_Name'))]",
                "connectionName": "[parameters('teams_1_Connection_Name')]"
              },
              "office365": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
                "connectionName": "[parameters('office365_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('conversionservice_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('cognitiveservicestextanalytics_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('cognitiveservicescontentmoderator_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('teams_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]"
      ],
      "resources": [
        {
          "apiVersion": "[parameters('diagnosticsApiVersion')]",
          "type": "providers/diagnosticSettings",
          "name": "[variables('diagnosticName')]",
          "properties": {
            "storageAccountId": null,
            "serviceBusRuleId": null,
            "workspaceId": "[variables('omsWorkspaceResourceId')]",
            "eventHubAuthorizationRuleId": null,
            "eventHubName": null,
            "metrics": [
              {
                "timeGrain": "AllMetrics",
                "category": "AllMetrics",
                "enabled": "[parameters('logsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[parameters('retentionPolicyEnabled')]",
                  "days": "[parameters('retentionDays')]"
                }
              }
            ],
            "logs": [
              {
                "category": "WorkflowRuntime",
                "enabled": "[parameters('logsEnabled')]",
                "retentionPolicy": {
                  "enabled": "[parameters('retentionPolicyEnabled')]",
                  "days": "[parameters('retentionDays')]"
                }
              }
            ]
          },
          "identity": null,
          "dependsOn": [
            "[concat('Microsoft.Logic/workflows/', parameters('logicAppName'))]"
          ]
        }
      ]
    },
    {
      "apiVersion": "[parameters('resourceDeploymentApiVersion')]",
      "name": "omsSolutionTemplate",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('omsWorkspaceResourceGroupName')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "apiVersion": "[parameters('omsSolutionApiVersion')]",
              "type": "Microsoft.OperationsManagement/solutions",
              "location": "[parameters('omsSolutionLocation')]",
              "name": "[Concat(parameters('omsSolutionName'), '(', parameters('omsWorkspaceName'), ')')]",
              "properties": {
                "workspaceResourceId": "[variables('omsWorkspaceResourceId')]"
              },
              "plan": {
                "name": "[Concat(parameters('omsSolutionName'), '(', parameters('omsWorkspaceName'), ')')]",
                "product": "[Concat('OMSGallery/', parameters('omsSolutionName'))]",
                "promotionCode": "",
                "publisher": "Microsoft"
              }
            }
          ]
        },
        "parameters": {}
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('office365_1_Connection_Name')]",
      "location": "[parameters('location')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('office365_1_Connection_DisplayName')]"
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('conversionservice_1_Connection_Name')]",
      "location": "[parameters('location')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'conversionservice')]"
        },
        "displayName": "[parameters('conversionservice_1_Connection_DisplayName')]"
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('cognitiveservicescontentmoderator_1_Connection_Name')]",
      "location": "[parameters('location')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'cognitiveservicescontentmoderator')]"
        },
        "displayName": "[parameters('cognitiveservicescontentmoderator_1_Connection_DisplayName')]",
        "parameterValues": {
          "api_key": "[parameters('cognitiveservicescontentmoderator_1_api_key')]",
          "siteUrl": "[parameters('cognitiveservicescontentmoderator_1_siteUrl')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('cognitiveservicestextanalytics_1_Connection_Name')]",
      "location": "[parameters('location')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'cognitiveservicestextanalytics')]"
        },
        "displayName": "[parameters('cognitiveservicestextanalytics_1_Connection_DisplayName')]",
        "parameterValues": {
          "apiKey": "[parameters('cognitiveservicestextanalytics_1_apiKey')]",
          "siteUrl": "[parameters('cognitiveservicestextanalytics_1_siteUrl')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('teams_1_Connection_Name')]",
      "location": "[parameters('location')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('location'), '/managedApis/', 'teams')]"
        },
        "displayName": "[parameters('teams_1_Connection_DisplayName')]"
      }
    }
  ],
  "outputs": {}
}